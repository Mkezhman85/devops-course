---
- name: Install Clickhouse
  hosts: clickhouse
  become: true
  gather_facts: true
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - name: Prepare for Clickhouse install
      block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/{{ item }}/{{ item }}_{{ clickhouse_version }}_amd64.deb"
            dest: "./{{ item }}-{{ clickhouse_version }}.deb"
            mode: '0755'
          become: true
          with_items: "{{ clickhouse_packages }}"
    - name: Install a .deb packages
      become: true
      ansible.builtin.apt:
        deb: ./{{ item }}-{{ clickhouse_version }}.deb
      with_items: "{{ clickhouse_packages }}"
      notify: Start clickhouse service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Pause 20 sec
      ansible.builtin.pause:
        seconds: 20

    - name: Create database
      become: true
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install vector
  hosts: vector
  handlers:
    - name: Start vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
  tasks:
    - name: Get vector distrib
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector_{{ vector_version }}-1_amd64.deb"
        dest: "./vector-{{ vector_version }}.deb"
        mode: "0755"
      notify: Start vector service
    - name: Install vector packages
      become: true
      # become_method: sudo
      ansible.builtin.apt:
        update_cache: true
        deb: "./{{ item.1 }}"
      with_indexed_items:
        - vector-{{ vector_version }}.deb
    - name: Flush handlers to restart vector
      ansible.builtin.meta: flush_handlers

    - name: Configure Vector | ensure what directory exists
      become: true
      ansible.builtin.file:
        path: "{{ vector_config_dir }}"
        state: directory
        mode: "0777"
    - name: Configure Vector | Template config
      become: true
      ansible.builtin.template:
        src: "template/vector_conf.j2"
        dest: "{{ vector_config_dir }}/vector.yml"
        mode: "0777"

- name: Install lighthouse
  hosts: lighthouse
  become: true
  tasks:
    - name: Install NGINX
      become: true
      ansible.builtin.apt:
        name:
          - nginx
        update_cache: true

    - name: Setting for nginx
      ansible.builtin.command: sudo systemctl enable nginx
      ignore_errors: true
      changed_when: false
      register: ignore_errors_register

    - name: Check nginx
      ansible.builtin.command: sudo service nginx status
      ignore_errors: true
      changed_when: false
      register: ignore_errors_register

    - name: Check nginx auto enabled
      ansible.builtin.command: sudo systemctl is-enabled nginx
      ignore_errors: true
      changed_when: false
      register: ignore_errors_registerv

    - name: Install git
      become: true
      ansible.builtin.apt:
        name:
          - git
        update_cache: true

    - name: Create lighhouse directory
      ansible.builtin.file:
        path: /var/www/lighthouse/html
        state: directory
        mode: '0755'

    - name: Clone lighthouse repository
      become: true
      ansible.builtin.git:
        repo: https://github.com/VKCOM/lighthouse.git
        version: 1
        dest: /var/www/lighthouse/html
        clone: false
        update: false

    - name: Copy ./lighthouse.conf
      ansible.builtin.copy:
        src: ./lighthouse.conf
        dest: /etc/nginx/sites-available/lighthouse.conf
        mode: '0755'

    - name: Register file exist
      ansible.builtin.stat:
        path: /etc/nginx/sites-enabled/lighthouse.conf
      register: file_exist

    - name: Create link in sites-enabled directory
      ansible.builtin.command: sudo ln -s /etc/nginx/sites-available/lighthouse.conf /etc/nginx/sites-enabled/
      ignore_errors: true
      changed_when: false
      register: ignore_errors_registerv
      when: not file_exist.stat.exists

    - name: Testing configuration
      ansible.builtin.command: sudo nginx -t
      ignore_errors: true
      changed_when: false
      register: ignore_errors_registerv

    - name: Remove default configuration
      become: true
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Reload web server
      ansible.builtin.command: sudo systemctl restart nginx
      ignore_errors: true
      changed_when: false
      register: ignore_errors_registerv
